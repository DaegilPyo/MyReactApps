{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daegilpyo/ReactCourse/burger-builder-v1/src/components/BurgerComponents/BuildControls/BuildControls.js\";\nimport BuildControl from './BuildControl/BuildControl';\nimport classes from './BuildControls.module.css';\nconst controls = [{\n  lable: 'Salad',\n  type: 'salad'\n}, {\n  lable: 'Bacon',\n  type: 'bacon'\n}, {\n  lable: 'Cheese',\n  type: 'cheese'\n}, {\n  lable: 'Meat',\n  type: 'meat'\n}];\n\nconst buildControls = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: classes.BuildControls,\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Total Price : \", props.totalPrice]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this), controls.map((el, index) => /*#__PURE__*/_jsxDEV(BuildControl, {\n    disabledInfo: props.disabledInfo[el.type],\n    label: el.lable,\n    addIngredient: () => props.addIngredient(el.type),\n    removeIndgredient: () => props.removeIndgredient(el.type)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this);\n\nexport default buildControls;","map":{"version":3,"sources":["/Users/daegilpyo/ReactCourse/burger-builder-v1/src/components/BurgerComponents/BuildControls/BuildControls.js"],"names":["BuildControl","classes","controls","lable","type","buildControls","props","BuildControls","totalPrice","map","el","index","disabledInfo","addIngredient","removeIndgredient"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,6BAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,MAAMC,QAAQ,GAAG,CACb;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CADa,EAEb;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,IAAI,EAAE;AAAxB,CAFa,EAGb;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CAHa,EAIb;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,IAAI,EAAE;AAAvB,CAJa,CAAjB;;AAMA,MAAMC,aAAa,GAAIC,KAAD,iBAClB;AAAK,EAAA,SAAS,EAAEL,OAAO,CAACM,aAAxB;AAAA,0BACI;AAAA,iCAAmBD,KAAK,CAACE,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAIQN,QAAQ,CAACO,GAAT,CAAa,CAACC,EAAD,EAAKC,KAAL,kBACT,QAAC,YAAD;AACI,IAAA,YAAY,EAAEL,KAAK,CAACM,YAAN,CAAmBF,EAAE,CAACN,IAAtB,CADlB;AAEI,IAAA,KAAK,EAAEM,EAAE,CAACP,KAFd;AAII,IAAA,aAAa,EAAE,MAAMG,KAAK,CAACO,aAAN,CAAoBH,EAAE,CAACN,IAAvB,CAJzB;AAKI,IAAA,iBAAiB,EAAE,MAAME,KAAK,CAACQ,iBAAN,CAAwBJ,EAAE,CAACN,IAA3B;AAL7B,KAGSO,KAHT;AAAA;AAAA;AAAA;AAAA,UADJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAiBA,eAAeN,aAAf","sourcesContent":["import BuildControl from './BuildControl/BuildControl';\nimport classes from './BuildControls.module.css';\n\nconst controls = [\n    { lable: 'Salad', type: 'salad' },\n    { lable: 'Bacon', type: 'bacon' },\n    { lable: 'Cheese', type: 'cheese' },\n    { lable: 'Meat', type: 'meat' },\n];\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <h1>Total Price : {props.totalPrice}</h1>\n\n        {\n            controls.map((el, index) =>\n                <BuildControl\n                    disabledInfo={props.disabledInfo[el.type]}\n                    label={el.lable}\n                    key={index}\n                    addIngredient={() => props.addIngredient(el.type)}\n                    removeIndgredient={() => props.removeIndgredient(el.type)}\n                />)\n        }\n    </div>\n);\n\nexport default buildControls;"]},"metadata":{},"sourceType":"module"}