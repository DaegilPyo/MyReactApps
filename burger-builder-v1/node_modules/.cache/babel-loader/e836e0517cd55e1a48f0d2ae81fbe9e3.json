{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daegilpyo/ReactCourse/burger-builder-v1/src/components/UI/Input/CustomInput.js\";\nimport React from 'react';\nimport classes from './CustomInput.module.css';\n\nconst customInput = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (!props.isValid) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'select':\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: props.changed,\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        children: [props.elementConfig.options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: opt.value,\n          children: [opt.displayValue, \" \"]\n        }, opt.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Input,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes.Label,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\nexport default customInput;","map":{"version":3,"sources":["/Users/daegilpyo/ReactCourse/burger-builder-v1/src/components/UI/Input/CustomInput.js"],"names":["React","classes","customInput","props","inputElement","inputClasses","InputElement","isValid","push","Invalid","elementType","join","elementConfig","value","changed","options","map","opt","displayValue","Input","Label","label"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACJ,OAAO,CAACK,YAAT,CAArB;;AAEA,MAAI,CAACH,KAAK,CAACI,OAAX,EAAoB;AAChBF,IAAAA,YAAY,CAACG,IAAb,CAAkBP,OAAO,CAACQ,OAA1B;AACH;;AACD,UAAQN,KAAK,CAACO,WAAd;AACI,SAAM,OAAN;AACIN,MAAAA,YAAY,gBACR;AACI,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADf;AAAA,WAEQR,KAAK,CAACS,aAFd;AAGI,QAAA,KAAK,EAAET,KAAK,CAACU,KAHjB;AAII,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAJpB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOA;;AACJ,SAAM,UAAN;AACIV,MAAAA,YAAY,gBAAG;AAAU,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CAArB;AAAA,WACPR,KAAK,CAACS,aADC;AACc,QAAA,KAAK,EAAET,KAAK,CAACU,KAD3B;AACkC,QAAA,QAAQ,EAAEV,KAAK,CAACW;AADlD;AAAA;AAAA;AAAA;AAAA,cAAf;AAEA;;AACJ,SAAM,QAAN;AACIV,MAAAA,YAAY,gBACR;AAAQ,QAAA,QAAQ,EAAED,KAAK,CAACW,OAAxB;AACI,QAAA,SAAS,EAAET,YAAY,CAACM,IAAb,CAAkB,GAAlB,CADf;AAAA,WAEQR,KAAK,CAACS,aAFd;AAGI,QAAA,KAAK,EAAET,KAAK,CAACU,KAHjB;AAAA,mBAIKV,KAAK,CAACS,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgCC,GAAG,iBAEhC;AAEI,UAAA,KAAK,EAAEA,GAAG,CAACJ,KAFf;AAAA,qBAGKI,GAAG,CAACC,YAHT;AAAA,WACSD,GAAG,CAACJ,KADb;AAAA;AAAA;AAAA;AAAA,gBAFH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAaA;;AACJ;AACIT,MAAAA,YAAY,gBAAG;AAAO,QAAA,SAAS,EAAEC,YAAY,CAACM,IAAb,CAAkB,GAAlB,CAAlB;AAAA,WAA6CR,KAAK,CAACS,aAAnD;AAAkE,QAAA,KAAK,EAAET,KAAK,CAACU,KAA/E;AAAsF,QAAA,QAAQ,EAAEV,KAAK,CAACW;AAAtG;AAAA;AAAA;AAAA;AAAA,cAAf;AACA;AA/BR;;AAiCA,sBACI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACkB,KAAxB;AAAA,4BACI;AAAO,MAAA,SAAS,EAAElB,OAAO,CAACmB,KAA1B;AAAA,gBAAkCjB,KAAK,CAACkB;AAAxC;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKjB,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA/CD;;AAiDA,eAAeF,WAAf","sourcesContent":["import React from 'react';\nimport classes from './CustomInput.module.css';\nconst customInput = (props) => {\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (!props.isValid) {\n        inputClasses.push(classes.Invalid)\n    }\n    switch (props.elementType) {\n        case ('input'):\n            inputElement =\n                <input\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed}\n                />;\n            break;\n        case ('textarea'):\n            inputElement = <textarea className={inputClasses.join(' ')}\n                {...props.elementConfig} value={props.value} onChange={props.changed} />\n            break;\n        case ('select'):\n            inputElement =\n                <select onChange={props.changed}\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value} >\n                    {props.elementConfig.options.map(opt =>\n                    (\n                        <option\n                            key={opt.value}\n                            value={opt.value}>\n                            {opt.displayValue} </option>\n                    )\n                    )} </select>\n            break;\n        default:\n            inputElement = <input className={inputClasses.join(' ')}{...props.elementConfig} value={props.value} onChange={props.changed} />\n            break;\n    }\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n}\n\nexport default customInput;"]},"metadata":{},"sourceType":"module"}