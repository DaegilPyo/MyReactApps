{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daegilpyo/ReactCourse/burger-builder-v1/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from \"react\";\nimport CustomButton from \"../../../components/UI/Button/Button\";\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-order';\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport CustomInput from \"../../../components/UI/Input/CustomInput\";\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your email'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your zipCode'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Country'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            }, {\n              value: \"cheapest\",\n              displayValue: \"Cheapest\"\n            }]\n          },\n          value: ''\n        }\n      }\n    };\n\n    this.orderHandler = event => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.totalPrice\n      };\n      axios.post('/orders.json', order).then(response => {\n        console.log(response);\n        this.setState({\n          puchasing: false,\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false,\n          puchasing: false\n        });\n      });\n    };\n\n    this.onChangeHandler = (event, inputIdentifier) => {\n      let updatedOrderForm = { ...this.state.orderForm\n      };\n      const updatedFormEl = updatedOrderForm[inputIdentifier];\n      updatedFormEl.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormEl;\n      this.setState({\n        orderForm: updatedOrderForm\n      });\n    };\n  }\n\n  render() {\n    const formElementArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [formElementArray.map(formElement => /*#__PURE__*/_jsxDEV(CustomInput, {\n        changed: event => this.onChangeHandler(event, formElement.id),\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value\n      }, formElement.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(CustomButton, {\n        onClick: this.orderHandler,\n        btnType: \"Success\",\n        children: \"ORDER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ContactData,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enter your Contact Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["/Users/daegilpyo/ReactCourse/burger-builder-v1/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","CustomButton","classes","axios","Spinner","CustomInput","ContactData","state","loading","orderForm","name","elementType","elementConfig","type","placeholder","value","email","street","zipCode","country","deliveryMethod","options","displayValue","orderHandler","event","setState","order","ingredients","props","price","totalPrice","post","then","response","console","log","puchasing","history","push","catch","err","onChangeHandler","inputIdentifier","updatedOrderForm","updatedFormEl","target","render","formElementArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CustomButton from \"../../../components/UI/Button/Button\";\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-order';\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport CustomInput from \"../../../components/UI/Input/CustomInput\";\nclass ContactData extends Component {\n    state = {\n        loading: false,\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: ''\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your email'\n                },\n                value: ''\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your street'\n                },\n                value: ''\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your zipCode'\n                },\n                value: ''\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Country'\n                },\n                value: ''\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: \"fastest\", displayValue: \"Fastest\" },\n                        { value: \"cheapest\", displayValue: \"Cheapest\" }\n                    ],\n                },\n                value: ''\n            },\n        }\n    }\n    orderHandler = (event) => {\n        this.setState({ loading: true });\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.totalPrice,\n\n        }\n        axios.post('/orders.json', order).then(response => {\n            console.log(response);\n            this.setState({ puchasing: false, loading: false, });\n            this.props.history.push('/');\n        }).catch(err => {\n            console.log(err);\n            this.setState({ loading: false, puchasing: false, });\n        });\n    }\n    onChangeHandler = (event, inputIdentifier) => {\n        let updatedOrderForm = { ...this.state.orderForm }\n        const updatedFormEl = updatedOrderForm[inputIdentifier];\n        updatedFormEl.value = event.target.value;\n        updatedOrderForm[inputIdentifier] = updatedFormEl;\n        this.setState({ orderForm: updatedOrderForm });\n    }\n    render() {\n        const formElementArray = [];\n        for (let key in this.state.orderForm) {\n            formElementArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form>\n                {formElementArray.map((formElement =>\n                    <CustomInput\n                        changed={(event) => this.onChangeHandler(event, formElement.id)}\n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                    />))}\n                {/* <CustomInput inputtpe=\"input\" label=\"Name\" placeholder=\"Your Name\" />\n                <CustomInput inputtpe=\"input\" label=\"Email\" placeholder=\"Your Email\" />\n                <CustomInput inputtpe=\"input\" label=\"Street\" placeholder=\"Your Street\" />\n                <CustomInput inputtpe=\"input\" label=\"Postal\" placeholder=\"Your Postal\" /> */}\n                <CustomButton onClick={this.orderHandler} btnType=\"Success\" >ORDER</CustomButton>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner></Spinner>\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n\n            </div>\n        );\n    }\n\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}