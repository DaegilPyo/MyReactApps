{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daegilpyo/ReactCourse/burger-builder-v1/src/components/Order/Order/Order.js\";\nimport React from 'react';\nimport classes from './Order.module.css';\n\nconst order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      amount: props.ingredients[ingredientName],\n      name: ingredientName\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {},\n      children: [ig.name, \" (\", ig.amount, \"),\"]\n    }, ig.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Order,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Ingredients : \", ingredientOutput, \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Price : \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" $ \", Number.parseFloat(props.price).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\nexport default order;","map":{"version":3,"sources":["/Users/daegilpyo/ReactCourse/burger-builder-v1/src/components/Order/Order/Order.js"],"names":["React","classes","order","props","ingredients","ingredientName","push","amount","name","ingredientOutput","map","ig","Order","Number","parseFloat","price","toFixed"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,cAAT,IAA2BF,KAAK,CAACC,WAAjC,EAA8C;AAC1CA,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,MAAAA,MAAM,EAAEJ,KAAK,CAACC,WAAN,CAAkBC,cAAlB,CAAV;AAA6CG,MAAAA,IAAI,EAAEH;AAAnD,KAAjB;AACH;;AAED,QAAMI,gBAAgB,GAAGL,WAAW,CAACM,GAAZ,CAAgBC,EAAE,IAAI;AAC3C,wBAAO;AAAoB,MAAA,KAAK,EAAE,EAA3B;AAAA,iBACFA,EAAE,CAACH,IADD,QACSG,EAAE,CAACJ,MADZ;AAAA,OAAWI,EAAE,CAACH,IAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAEH,GAHwB,CAAzB;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACW,KAAxB;AAAA,4BACH;AAAA,oCAAmBH,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,2CAAY;AAAA,0BAAYI,MAAM,CAACC,UAAP,CAAkBX,KAAK,CAACY,KAAxB,EAA+BC,OAA/B,CAAuC,CAAvC,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAhBD;;AAkBA,eAAed,KAAf","sourcesContent":["import React from 'react';\nimport classes from './Order.module.css';\nconst order = (props) => {\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({ amount: props.ingredients[ingredientName], name: ingredientName });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span key={ig.name} style={{\n        }} >{ig.name} ({ig.amount}),</span>;\n    })\n\n    return <div className={classes.Order}>\n        <p> Ingredients : {ingredientOutput}   </p>\n        <p> Price : <strong> $ {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n    </div>\n};\n\nexport default order;"]},"metadata":{},"sourceType":"module"}