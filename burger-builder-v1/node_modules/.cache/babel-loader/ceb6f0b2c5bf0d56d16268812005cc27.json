{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daegilpyo/ReactCourse/burger-builder-v1/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport { Component } from \"react\";\nimport Burger from \"./../../components/BurgerComponents/Burger/Burger\";\nimport Aux from \"../../hoc/Aux\";\nimport BuildControls from \"./../../components/BurgerComponents/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/BurgerComponents/OrderSummary/OrderSummary\";\nimport axios from '../../axios-order';\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nconst INGREDIENT_PRICES = {\n  salad: 0.2,\n  cheese: 0.5,\n  bacon: 0.3,\n  meat: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        meat: 0,\n        cheese: 0,\n        salad: 0,\n        bacon: 0\n      },\n      totalPrice: 4,\n      purchaseable: false,\n      puchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      if (this.state.ingredients[type] > 0) {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = { ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({\n          ingredients: updatedIngredients,\n          totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n      }\n    };\n\n    this.purchaseHandler = () => this.setState({\n      puchasing: true\n    });\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        puchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert('Continue Purchase!');\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: \"Daegil\",\n          age: 27,\n          address: {\n            street: '77 Finch Ave East',\n            zipCode: \"M2N 6H8\"\n          },\n          email: 'pyo920917@gmail.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        console.log(response);\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n      this.setState({\n        puchasing: false\n      });\n    };\n  }\n\n  updatePurchaseState(updatedIngredients) {\n    const ingredients = updatedIngredients;\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => sum + el, 0);\n    this.setState({\n      purchaseable: sum > 0\n    });\n  }\n\n  // componentDidMount() {\n  //     console.log('[BurgerBuilder.js] componentDidMount...');\n  // }\n  // componentDidUpdate() {\n  //     console.log('[BurgerBuilder.js] componentDidUpdate...');\n  // }\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = /*#__PURE__*/_jsxDEV(OrderSummary, {\n      totalPrice: this.state.totalPrice,\n      ingredients: this.state.ingredients,\n      continuePurchase: this.purchaseContinueHandler,\n      cancelPurchase: this.purchaseCancelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 28\n    }, this);\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.puchasing,\n        modalClose: this.purchaseCancelHandler,\n        children: orderSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        totalPrice: this.state.totalPrice,\n        disabledInfo: disabledInfo,\n        addIngredient: this.addIngredientHandler,\n        removeIndgredient: this.removeIngredientHandler,\n        purchaseable: this.state.purchaseable,\n        purchaseHandler: this.purchaseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/daegilpyo/ReactCourse/burger-builder-v1/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["Component","Burger","Aux","BuildControls","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","bacon","meat","BurgerBuilder","state","ingredients","totalPrice","purchaseable","puchasing","loading","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","age","address","street","zipCode","email","deliveryMethod","post","then","response","console","log","catch","err","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport Burger from \"./../../components/BurgerComponents/Burger/Burger\"\nimport Aux from \"../../hoc/Aux\";\nimport BuildControls from \"./../../components/BurgerComponents/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/BurgerComponents/OrderSummary/OrderSummary\";\nimport axios from '../../axios-order';\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nconst INGREDIENT_PRICES = {\n    salad: 0.2,\n    cheese: 0.5,\n    bacon: 0.3,\n    meat: 0.7,\n}\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n\n    //     }\n    // }\n    state = {\n        ingredients: {\n            meat: 0,\n            cheese: 0,\n            salad: 0,\n            bacon: 0,\n        },\n        totalPrice: 4,\n        purchaseable: false,\n        puchasing: false,\n        loading: false,\n    }\n\n    updatePurchaseState(updatedIngredients) {\n        const ingredients = updatedIngredients;\n        const sum = Object.keys(ingredients).map((igKey) => {\n            return ingredients[igKey];\n        }).reduce((sum, el) => sum + el, 0);\n        this.setState({\n            purchaseable: sum > 0,\n        });\n    }\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: newPrice,\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n    removeIngredientHandler = (type) => {\n        if (this.state.ingredients[type] > 0) {\n            const oldCount = this.state.ingredients[type];\n            const updatedCount = oldCount - 1;\n            const updatedIngredients = {\n                ...this.state.ingredients\n            };\n            updatedIngredients[type] = updatedCount;\n            const priceAddition = INGREDIENT_PRICES[type];\n            const oldPrice = this.state.totalPrice;\n            const newPrice = oldPrice - priceAddition;\n            this.setState({\n                ingredients: updatedIngredients,\n                totalPrice: newPrice,\n            });\n            this.updatePurchaseState(updatedIngredients);\n        }\n    }\n\n    purchaseHandler = () =>\n        this.setState({ puchasing: true }\n        );\n\n    purchaseCancelHandler = () => {\n        this.setState({\n            puchasing: false,\n        });\n    }\n\n    purchaseContinueHandler = () => {\n        // alert('Continue Purchase!');\n        this.setState({ loading: true });\n        const order = {\n            ingredients: this.state.ingredients,\n            price: this.state.totalPrice,\n            customer: {\n                name: \"Daegil\",\n                age: 27,\n                address: {\n                    street: '77 Finch Ave East',\n                    zipCode: \"M2N 6H8\"\n                },\n                email: 'pyo920917@gmail.com'\n            },\n            deliveryMethod: 'fastest'\n        }\n        axios.post('/orders.json', order).then(response => {\n            console.log(response);\n            this.setState({ loading: false });\n\n        }).catch(err => {\n            console.log(err);\n        });\n        this.setState({\n            puchasing: false,\n        });\n\n    }\n    // componentDidMount() {\n    //     console.log('[BurgerBuilder.js] componentDidMount...');\n    // }\n    // componentDidUpdate() {\n    //     console.log('[BurgerBuilder.js] componentDidUpdate...');\n    // }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        let orderSummary = <OrderSummary\n            totalPrice={this.state.totalPrice}\n            ingredients={this.state.ingredients}\n            continuePurchase={this.purchaseContinueHandler}\n            cancelPurchase={this.purchaseCancelHandler}\n        />;\n        if (this.state.loading) {\n            orderSummary = <Spinner></Spinner>;\n        }\n        return (\n            <Aux>\n                {\n                    <Modal show={this.state.puchasing} modalClose={this.purchaseCancelHandler}>\n                        {orderSummary}\n                    </Modal>\n                }\n                <Burger ingredients={this.state.ingredients}></Burger>\n                <BuildControls totalPrice={this.state.totalPrice}\n                    disabledInfo={disabledInfo}\n                    addIngredient={this.addIngredientHandler}\n                    removeIndgredient={this.removeIngredientHandler}\n                    purchaseable={this.state.purchaseable}\n                    purchaseHandler={this.purchaseHandler}\n                />\n            </Aux>\n        );\n    };\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}