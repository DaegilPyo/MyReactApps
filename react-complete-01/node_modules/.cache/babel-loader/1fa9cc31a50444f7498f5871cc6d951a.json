{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daegilpyo/ReactCourse/react-complete-01/src/App.js\";\nimport { Component } from 'react'; // import { useState } from 'react';\n\nimport './App.css';\nimport Person from './Components/Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        name: 'Daegil',\n        age: 28\n      }, {\n        name: 'Emi',\n        age: 32\n      }, {\n        name: 'Hazel',\n        age: 22\n      }],\n      isPressed: false\n    };\n\n    this.switchNameHandler = newName => {\n      this.setState({\n        persons: [{\n          name: newName,\n          age: 28\n        }, {\n          name: 'Emi',\n          age: 32\n        }, {\n          name: 'Hazel',\n          age: 22\n        }]\n      });\n    };\n\n    this.nameChangeHandler = event => {\n      this.setState({\n        persons: [{\n          name: event.target.value,\n          age: 28\n        }, {\n          name: 'Emi',\n          age: 32\n        }, {\n          name: 'Hazel',\n          age: 22\n        }]\n      });\n    };\n\n    this.managePeople = () => {\n      const isPressed = this.state.isPressed;\n      this.setState({\n        isPressed: !isPressed\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      width: '10%',\n      color: 'white',\n      backgroundColor: 'blue',\n      font: 'inherit',\n      border: '1x solid blue',\n      padding: '8px'\n    };\n    let persons = null;\n\n    if (this.state.isPressed) {\n      persons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Person, {\n          name: this.state.persons[0].name,\n          age: this.state.persons[0].age,\n          onClick: () => this.switchNameHandler('Fucker')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Person, {\n          name: this.state.persons[1].name,\n          age: this.state.persons[1].age,\n          onClick: this.switchNameHandler.bind(this, 'Shit'),\n          onChange: this.nameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Person, {\n          name: this.state.persons[2].name,\n          age: this.state.persons[2].age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello world !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is really working dude! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: style,\n        onClick: this.managePeople,\n        children: this.state.isPressed ? \"Hide Name\" : \"Show People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), persons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this); // return React.createElement('div', null,\n    //   React.createElement('h1', { className: 'App' }, 'Hello World!'));\n  }\n\n} // const App = (props) => {\n//   const [personsState, setPersonsState] = useState({\n//     persons: [\n//       { name: 'Daegil', age: 28 },\n//       { name: 'Emi', age: 32 },\n//       { name: 'Hazel', age: 22 },\n//     ],\n//   });\n//   const [isPressedState, setIsPressedState] = useState({\n//     isPressed: false,\n//   });\n//   const\n//     switchNameHandler = () => {\n//       let isp = !isPressedState.isPressed;\n//       setIsPressedState({\n//         isPressed: isp\n//       });\n//     }\n//   return (\n//     <div className=\"App\">\n//       <h1>\n//         Hello world !\n//       </h1>\n//       <p>This is really working dude! </p>\n//       <button onClick={switchNameHandler}>Switch Name</button>\n//       {!isPressedState.isPressed ? null : <div>\n//         <Person name={personsState.persons[0].name} age={personsState.persons[0].age} />\n//         <Person name={personsState.persons[1].name} age={personsState.persons[1].age} />\n//         <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n//       </div>}\n//     </div>\n//   );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/daegilpyo/ReactCourse/react-complete-01/src/App.js"],"names":["Component","Person","App","state","persons","name","age","isPressed","switchNameHandler","newName","setState","nameChangeHandler","event","target","value","managePeople","render","style","width","color","backgroundColor","font","border","padding","bind"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n// import { useState } from 'react';\nimport './App.css';\nimport Person from './Components/Person/Person';\nclass App extends Component {\n\n  state = {\n    persons: [\n      { name: 'Daegil', age: 28 },\n      { name: 'Emi', age: 32 },\n      { name: 'Hazel', age: 22 },\n    ],\n    isPressed: false,\n  };\n  switchNameHandler = (newName) => {\n    this.setState({\n      persons: [\n        { name: newName, age: 28 },\n        { name: 'Emi', age: 32 },\n        { name: 'Hazel', age: 22 },\n      ],\n    });\n  }\n  nameChangeHandler = (event) => {\n    this.setState({\n      persons: [\n        { name: event.target.value, age: 28 },\n        { name: 'Emi', age: 32 },\n        { name: 'Hazel', age: 22 },\n      ],\n    });\n  }\n  managePeople = () => {\n    const isPressed = this.state.isPressed;\n    this.setState(\n      {\n        isPressed: !isPressed,\n      }\n    );\n  }\n  render() {\n    const style = {\n      width: '10%',\n      color: 'white',\n      backgroundColor: 'blue',\n      font: 'inherit',\n      border: '1x solid blue',\n      padding: '8px',\n    }\n\n    let persons = null;\n\n    if (this.state.isPressed) {\n      persons = (<div>\n        <Person name={this.state.persons[0].name} age={this.state.persons[0].age} onClick={() => this.switchNameHandler('Fucker')} />\n        <Person name={this.state.persons[1].name} age={this.state.persons[1].age} onClick={this.switchNameHandler.bind(this, 'Shit')} onChange={this.nameChangeHandler} />\n        <Person name={this.state.persons[2].name} age={this.state.persons[2].age} />\n      </div>);\n    }\n    return (\n      <div className=\"App\">\n        <h1>\n          Hello world !\n      </h1>\n        <p>This is really working dude! </p>\n        <button style={style} onClick={this.managePeople}>{this.state.isPressed ? \"Hide Name\" : \"Show People\"}</button>\n        {persons}\n      </div>\n    );\n    // return React.createElement('div', null,\n    //   React.createElement('h1', { className: 'App' }, 'Hello World!'));\n  }\n}\n\n\n\n\n// const App = (props) => {\n//   const [personsState, setPersonsState] = useState({\n//     persons: [\n//       { name: 'Daegil', age: 28 },\n//       { name: 'Emi', age: 32 },\n//       { name: 'Hazel', age: 22 },\n//     ],\n//   });\n//   const [isPressedState, setIsPressedState] = useState({\n//     isPressed: false,\n//   });\n//   const\n//     switchNameHandler = () => {\n//       let isp = !isPressedState.isPressed;\n//       setIsPressedState({\n//         isPressed: isp\n//       });\n//     }\n//   return (\n//     <div className=\"App\">\n//       <h1>\n//         Hello world !\n//       </h1>\n//       <p>This is really working dude! </p>\n//       <button onClick={switchNameHandler}>Switch Name</button>\n//       {!isPressedState.isPressed ? null : <div>\n//         <Person name={personsState.persons[0].name} age={personsState.persons[0].age} />\n//         <Person name={personsState.persons[1].name} age={personsState.persons[1].age} />\n//         <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n//       </div>}\n//     </div>\n//   );\n// }\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}