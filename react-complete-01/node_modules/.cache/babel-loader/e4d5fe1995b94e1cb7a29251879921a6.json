{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daegilpyo/ReactCourse/react-complete-01/src/Components/Persons/Persons.js\";\nimport Person from \"./Person/Person\";\nimport React, { Component, PureComponent } from 'react';\n\nclass Persons extends PureComponent {\n  //componenet life cycle hooks\n  constructor(props) {\n    super(props);\n    console.log('[Persons.js] constructor');\n  } // static getDerivedStateFromProps(props, state) {\n  //     console.log('[Persons.js] getDerivedStateFromProps');\n  //     return state;\n  // }\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[Persons.js] shouldComponentUpdate');\n    return nextProps.persons === this.props.persons || nextProps.onChange !== this.props.onChange || nextProps.onClick !== this.props.onClick; // return true;\n  }\n\n  getSnapshotBeforeUpdate(prevProprs, prevState) {\n    console.log('[Persons.js] getSnapshotBeforeUpdate');\n    console.log(`Prev Value : ${prevProprs.persons[0].name}`);\n    return {\n      message: 'Snapshot!'\n    };\n  }\n\n  componentDidUpdate(prevProprs, prevState, snapshot) {\n    console.log('[Persons.js] componentDidUpdate');\n    console.log(snapshot);\n  }\n\n  componentWillUnmount() {\n    console.log('[Persons.js] componentWillUnmount');\n  } //componenet life cycle hooks\n\n\n  render() {\n    console.log('[Persons.js] rendering...');\n    return this.props.isPressed ? this.props.persons.map((person, index) => {\n      return /*#__PURE__*/_jsxDEV(Person, {\n        name: person.name,\n        age: person.age,\n        onClick: () => this.props.onClick(index),\n        onChange: event => this.props.onChange(event, person.id)\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this);\n    }) : null;\n  }\n\n}\n\nexport default Persons;","map":{"version":3,"sources":["/Users/daegilpyo/ReactCourse/react-complete-01/src/Components/Persons/Persons.js"],"names":["Person","React","Component","PureComponent","Persons","constructor","props","console","log","shouldComponentUpdate","nextProps","nextState","persons","onChange","onClick","getSnapshotBeforeUpdate","prevProprs","prevState","name","message","componentDidUpdate","snapshot","componentWillUnmount","render","isPressed","map","person","index","age","event","id"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;;AAEA,MAAMC,OAAN,SAAsBD,aAAtB,CAAoC;AAChC;AACAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,GAL+B,CAMhC;AACA;AACA;AACA;;;AACAC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,WAAOE,SAAS,CAACE,OAAV,KAAsB,KAAKN,KAAL,CAAWM,OAAjC,IAA6CF,SAAS,CAACG,QAAV,KAAuB,KAAKP,KAAL,CAAWO,QAAlC,IAA+CH,SAAS,CAACI,OAAV,KAAsB,KAAKR,KAAL,CAAWQ,OAApI,CAFwC,CAGxC;AACH;;AACDC,EAAAA,uBAAuB,CAACC,UAAD,EAAaC,SAAb,EAAwB;AAC3CV,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeQ,UAAU,CAACJ,OAAX,CAAmB,CAAnB,EAAsBM,IAAK,EAAvD;AACA,WAAO;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAP;AACH;;AACDC,EAAAA,kBAAkB,CAACJ,UAAD,EAAaC,SAAb,EAAwBI,QAAxB,EAAkC;AAChDd,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnBf,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH,GA1B+B,CA4BhC;;;AAGAe,EAAAA,MAAM,GAAG;AACLhB,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,WAAO,KAAKF,KAAL,CAAWkB,SAAX,GAAuB,KAAKlB,KAAL,CAAWM,OAAX,CAAmBa,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACpE,0BAAQ,QAAC,MAAD;AAAwB,QAAA,IAAI,EAAED,MAAM,CAACR,IAArC;AACJ,QAAA,GAAG,EAAEQ,MAAM,CAACE,GADR;AACa,QAAA,OAAO,EAAE,MAAM,KAAKtB,KAAL,CAAWQ,OAAX,CAAmBa,KAAnB,CAD5B;AAEJ,QAAA,QAAQ,EAAGE,KAAD,IAAW,KAAKvB,KAAL,CAAWO,QAAX,CAAoBgB,KAApB,EAA2BH,MAAM,CAACI,EAAlC;AAFjB,SAAaJ,MAAM,CAACI,EAApB;AAAA;AAAA;AAAA;AAAA,cAAR;AAGH,KAJ6B,CAAvB,GAIF,IAJL;AAKH;;AAtC+B;;AA0CpC,eAAe1B,OAAf","sourcesContent":["import Person from \"./Person/Person\"\nimport React, { Component, PureComponent } from 'react';\n\nclass Persons extends PureComponent {\n    //componenet life cycle hooks\n    constructor(props) {\n        super(props);\n        console.log('[Persons.js] constructor');\n    }\n    // static getDerivedStateFromProps(props, state) {\n    //     console.log('[Persons.js] getDerivedStateFromProps');\n    //     return state;\n    // }\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('[Persons.js] shouldComponentUpdate');\n        return nextProps.persons === this.props.persons || (nextProps.onChange !== this.props.onChange || (nextProps.onClick !== this.props.onClick));\n        // return true;\n    }\n    getSnapshotBeforeUpdate(prevProprs, prevState) {\n        console.log('[Persons.js] getSnapshotBeforeUpdate');\n        console.log(`Prev Value : ${prevProprs.persons[0].name}`);\n        return { message: 'Snapshot!' };\n    }\n    componentDidUpdate(prevProprs, prevState, snapshot) {\n        console.log('[Persons.js] componentDidUpdate');\n        console.log(snapshot);\n    }\n    componentWillUnmount() {\n        console.log('[Persons.js] componentWillUnmount');\n    }\n\n    //componenet life cycle hooks\n\n\n    render() {\n        console.log('[Persons.js] rendering...');\n        return this.props.isPressed ? this.props.persons.map((person, index) => {\n            return (<Person key={person.id} name={person.name}\n                age={person.age} onClick={() => this.props.onClick(index)}\n                onChange={(event) => this.props.onChange(event, person.id)} />)\n        }) : null;\n    }\n}\n\n\nexport default Persons;"]},"metadata":{},"sourceType":"module"}