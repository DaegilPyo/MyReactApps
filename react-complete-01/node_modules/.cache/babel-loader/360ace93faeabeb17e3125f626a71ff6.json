{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daegilpyo/ReactCourse/react-complete-01/src/App.js\";\nimport { Component } from 'react'; // import { useState } from 'react';\n\nimport './App.css';\nimport Cockpit from './Components/Cockpit/Cockpit'; // import Person from './Components/Persons/Person/Person';\n\nimport Persons from './Components/Persons/Persons'; // import styled from 'styled-components'\n// import Radium, { StyleRoot } from 'radium';\n\nimport withClass from './hoc/withClass';\nimport Aux from './hoc/Aux';\nimport classes from './Test.module.css'; // const StyledButton = styled.button`\n//   width: 10%;\n//   color: white;\n//   background-color: ${props => props.isPressed ? \"red\" : \"green\"} ;\n//   font: inherit;\n//   border: 1x solid ${props => props.isPressed ? \"red\" : \"green\"};\n//   padding: 8px;\n//   cursor: pointer;\n//   &:hover {\n//     background-color: ${props => props.isPressed ? \"salmon\" : \"lightgreen\"} ;\n//     color: black;\n//   }\n// `;\n\nclass App extends Component {\n  //componenet life cycle hooks\n  constructor(props) {\n    super(props);\n    this.state = {\n      persons: [{\n        name: null,\n        age: 28,\n        id: 'qwewq31'\n      }, {\n        name: 'Emi',\n        age: 32,\n        id: 'qwew123qa53sd31'\n      }, {\n        name: 'Hazel',\n        age: 22,\n        id: 'qwe123wq3154231'\n      }],\n      isPressed: false,\n      isCockput: true,\n      changeCounter: 0\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      }; // const person = Object.assign({}, this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState((prevState, props) => {\n        return {\n          changeCounter: prevState.changeCounter + 1,\n          persons: persons\n        };\n      });\n    };\n\n    this.managePeople = () => {\n      const isPressed = this.state.isPressed;\n      this.setState({\n        isPressed: !isPressed\n      });\n    };\n\n    this.deletePersonHander = index => {\n      const persons = [...this.state.persons]; // const persons = this.state.persons.slice();\n\n      persons.splice(index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.toggleCockpit = () => {\n      let isCockput = !this.state.isCockput;\n      this.setState({\n        isCockput: isCockput\n      });\n    };\n\n    console.log('[App.js] constructor');\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDerivedStateFromProps');\n    return state;\n  }\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate');\n    return true;\n  }\n\n  getSnapshotBeforeUpdate(prevProprs, prevState) {\n    console.log('[App.js] getSnapshotBeforeUpdate');\n    return null;\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate');\n  } //componenet life cycle hooks\n\n\n  render() {\n    console.log('[App.js] render'); // let classes = ['App', 'AppModi'].join(' ');\n\n    let classes = ['Default'];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('App');\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push('AppModi');\n    } // let className = this.state.isPressed ? 'AppModi' : 'App';\n\n\n    const style = {\n      width: '10%',\n      color: 'white',\n      backgroundColor: this.state.isPressed ? 'red' : 'green',\n      font: 'inherit',\n      border: '1x solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    }; // let persons = null;\n\n    if (this.state.isPressed) {\n      // persons = (<div>\n      //   {this.state.persons.map((person, index) => {\n      //     return (<Person key={person.id} name={person.name} age={person.age} onClick={() => this.deletePersonHander(index)} onChange={(event) => this.nameChangeHandler(event, person.id)} />)\n      //   })}\n      // </div>);\n      style.backgroundColor = 'red';\n      style[':hover'] = {\n        backgroundColor: 'salmon',\n        color: 'black'\n      }; // className = 'AppModi';\n    }\n\n    console.log(this.state.changeCounter);\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      classes: classes.join(' '),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.changeCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCockpit,\n        children: \"Remove Cockpit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), this.state.isCockput ? /*#__PURE__*/_jsxDEV(Cockpit, {\n        persons: this.state.persons,\n        title: this.props.appTitle,\n        onClick: this.managePeople,\n        isPressed: this.state.isPressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(Persons, {\n        persons: this.state.persons,\n        onClick: this.deletePersonHander,\n        onChange: this.nameChangeHandler,\n        isPressed: this.state.isPressed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this); // return React.createElement('div', null,\n    //   React.createElement('h1', { className: 'App' }, 'Hello World!'));\n  }\n\n} // const App = (props) => {\n//   const [personsState, setPersonsState] = useState({\n//     persons: [\n//       { name: 'Daegil', age: 28 },\n//       { name: 'Emi', age: 32 },\n//       { name: 'Hazel', age: 22 },\n//     ],\n//   });\n//   const [isPressedState, setIsPressedState] = useState({\n//     isPressed: false,\n//   });\n//   const\n//     switchNameHandler = () => {\n//       let isp = !isPressedState.isPressed;\n//       setIsPressedState({\n//         isPressed: isp\n//       });\n//     }\n//   return (\n//     <div className=\"App\">\n//       <h1>\n//         Hello world !\n//       </h1>\n//       <p>This is really working dude! </p>\n//       <button onClick={switchNameHandler}>Switch Name</button>\n//       {!isPressedState.isPressed ? null : <div>\n//         <Person name={personsState.persons[0].name} age={personsState.persons[0].age} />\n//         <Person name={personsState.persons[1].name} age={personsState.persons[1].age} />\n//         <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n//       </div>}\n//     </div>\n//   );\n// }\n// export default Radium(App);\n\n\nexport default _c = withClass(App, classes.Default);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/daegilpyo/ReactCourse/react-complete-01/src/App.js"],"names":["Component","Cockpit","Persons","withClass","Aux","classes","App","constructor","props","state","persons","name","age","id","isPressed","isCockput","changeCounter","nameChangeHandler","event","personIndex","findIndex","p","person","target","value","setState","prevState","managePeople","deletePersonHander","index","splice","toggleCockpit","console","log","getDerivedStateFromProps","componentDidMount","shouldComponentUpdate","nextProps","nextState","getSnapshotBeforeUpdate","prevProprs","componentDidUpdate","render","length","push","style","width","color","backgroundColor","font","border","padding","cursor","join","appTitle","Default"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n// import { useState } from 'react';\nimport './App.css';\nimport Cockpit from './Components/Cockpit/Cockpit';\n// import Person from './Components/Persons/Person/Person';\nimport Persons from './Components/Persons/Persons';\n// import styled from 'styled-components'\n// import Radium, { StyleRoot } from 'radium';\nimport withClass from './hoc/withClass';\nimport Aux from './hoc/Aux';\nimport classes from './Test.module.css';\n\n// const StyledButton = styled.button`\n//   width: 10%;\n//   color: white;\n//   background-color: ${props => props.isPressed ? \"red\" : \"green\"} ;\n//   font: inherit;\n//   border: 1x solid ${props => props.isPressed ? \"red\" : \"green\"};\n//   padding: 8px;\n//   cursor: pointer;\n//   &:hover {\n//     background-color: ${props => props.isPressed ? \"salmon\" : \"lightgreen\"} ;\n//     color: black;\n//   }\n// `;\nclass App extends Component {\n  //componenet life cycle hooks\n  constructor(props) {\n    super(props);\n    console.log('[App.js] constructor');\n  }\n  state = {\n    persons: [\n      { name: null, age: 28, id: 'qwewq31' },\n      { name: 'Emi', age: 32, id: 'qwew123qa53sd31' },\n      { name: 'Hazel', age: 22, id: 'qwe123wq3154231' },\n    ],\n    isPressed: false,\n    isCockput: true,\n    changeCounter: 0,\n  };\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDerivedStateFromProps');\n    return state;\n  }\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate');\n    return true;\n  }\n  getSnapshotBeforeUpdate(prevProprs, prevState) {\n    console.log('[App.js] getSnapshotBeforeUpdate');\n    return null;\n  }\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate');\n  }\n  //componenet life cycle hooks\n\n\n  nameChangeHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n    const person = { ...this.state.persons[personIndex] };\n    // const person = Object.assign({}, this.state.persons[personIndex]);\n    person.name = event.target.value;\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n    this.setState((prevState, props) => {\n      return {\n        changeCounter: prevState.changeCounter + 1,\n        persons: persons\n      }\n    });\n  }\n  managePeople = () => {\n    const isPressed = this.state.isPressed;\n    this.setState(\n      {\n        isPressed: !isPressed,\n      }\n    );\n  }\n  deletePersonHander = (index) => {\n    const persons = [...this.state.persons];\n    // const persons = this.state.persons.slice();\n    persons.splice(index, 1);\n    this.setState({ persons: persons });\n  }\n  toggleCockpit = () => {\n    let isCockput = !this.state.isCockput;\n    this.setState({\n      isCockput: isCockput\n    });\n  }\n  render() {\n    console.log('[App.js] render');\n    // let classes = ['App', 'AppModi'].join(' ');\n    let classes = ['Default'];\n    if (this.state.persons.length <= 2) {\n      classes.push('App');\n    }\n    if (this.state.persons.length <= 1) {\n      classes.push('AppModi');\n    }\n    // let className = this.state.isPressed ? 'AppModi' : 'App';\n    const style = {\n      width: '10%',\n      color: 'white',\n      backgroundColor: this.state.isPressed ? 'red' : 'green',\n      font: 'inherit',\n      border: '1x solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    };\n    // let persons = null;\n    if (this.state.isPressed) {\n      // persons = (<div>\n      //   {this.state.persons.map((person, index) => {\n      //     return (<Person key={person.id} name={person.name} age={person.age} onClick={() => this.deletePersonHander(index)} onChange={(event) => this.nameChangeHandler(event, person.id)} />)\n      //   })}\n      // </div>);\n      style.backgroundColor = 'red';\n      style[':hover'] = {\n        backgroundColor: 'salmon',\n        color: 'black',\n      }\n      // className = 'AppModi';\n    }\n    console.log(this.state.changeCounter);\n    return (\n      <Aux classes={classes.join(' ')}>\n        <p>{this.state.changeCounter}</p>\n        <button onClick={this.toggleCockpit}>Remove Cockpit</button>\n        {this.state.isCockput ? <Cockpit\n          persons={this.state.persons}\n          title={this.props.appTitle}\n          onClick={this.managePeople}\n          isPressed={this.state.isPressed} /> : null}\n        <Persons\n          persons={this.state.persons}\n          onClick={this.deletePersonHander}\n          onChange={this.nameChangeHandler}\n          isPressed={this.state.isPressed} />\n      </Aux>\n    );\n    // return React.createElement('div', null,\n    //   React.createElement('h1', { className: 'App' }, 'Hello World!'));\n  }\n}\n\n\n// const App = (props) => {\n//   const [personsState, setPersonsState] = useState({\n//     persons: [\n//       { name: 'Daegil', age: 28 },\n//       { name: 'Emi', age: 32 },\n//       { name: 'Hazel', age: 22 },\n//     ],\n//   });\n//   const [isPressedState, setIsPressedState] = useState({\n//     isPressed: false,\n//   });\n//   const\n//     switchNameHandler = () => {\n//       let isp = !isPressedState.isPressed;\n//       setIsPressedState({\n//         isPressed: isp\n//       });\n//     }\n//   return (\n//     <div className=\"App\">\n//       <h1>\n//         Hello world !\n//       </h1>\n//       <p>This is really working dude! </p>\n//       <button onClick={switchNameHandler}>Switch Name</button>\n//       {!isPressedState.isPressed ? null : <div>\n//         <Person name={personsState.persons[0].name} age={personsState.persons[0].age} />\n//         <Person name={personsState.persons[1].name} age={personsState.persons[1].age} />\n//         <Person name={personsState.persons[2].name} age={personsState.persons[2].age} />\n//       </div>}\n//     </div>\n//   );\n// }\n\n\n\n\n// export default Radium(App);\nexport default withClass(App, classes.Default);\n"]},"metadata":{},"sourceType":"module"}